---
name: ci
on: [push, pull_request]
jobs:
  build:
    env:
      CGO_ENABLED: 1
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Test
        run: go test -race -v -timeout 2m ./...
      - name: Build cmd UNIX
        if: ${{ matrix.os }} != "windows-latest"
        run: |
          mkdir -p $GITHUB_WORKSPACE/packages/
          PROG_VERSION=$(git describe --tags --match 'v[0-9]*')
          OS_VERSION=$(echo ${{ matrix.os }} | cut -d'-' -f1)
          go build -ldflags "-w -s -X main.version=$PROG_VERSION" -o $GITHUB_WORKSPACE/packages/check-prometheusexporter-${OS_VERSION}-amd64

      - name: Build cmd Windows
        if: ${{ matrix.os }} == "windows-latest"
        run: |
          mkdir -p $GITHUB_WORKSPACE/packages/
          for /f %%i in ('git describe --tags --match 'v[0-9]*') do set PROG_VERSION=%%i
          go build -ldflags "-w -s -X main.version=%PROG_VERSION% -o $GITHUB_WORKSPACE/packages/check-prometheusexporter-windows-amd64.exe
      - name: Archive packages
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v2
        with:
          name: packages
          retention-days: 1
          path: ${{ github.workspace }}/packages/
  release-to-github:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
      - name: Download packages
        uses: actions/download-artifact@v2
        with:
          name: packages
          path: packages
      - name: Upload to Github Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "check-prometheusexporter-*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          body: "New build."
